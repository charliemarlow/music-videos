{"version":3,"sources":["App.tsx","reportWebVitals.js","index.tsx"],"names":["App","useState","username","setUsername","password","setPassword","isUsernamePasswordShowing","setIsUsernamePasswordShowing","className","TextField","label","value","onChange","e","target","Button","onClick","old","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAqCeA,MAjCf,WAA6B,IAAD,EACMC,mBAAS,IADf,mBACnBC,EADmB,KACTC,EADS,OAEMF,mBAAS,IAFf,mBAEnBG,EAFmB,KAETC,EAFS,OAGwCJ,oBAChE,GAJwB,mBAGnBK,EAHmB,KAGQC,EAHR,KAO1B,OACE,sBAAKC,UAAU,MAAf,UACE,sCACA,cAACC,EAAA,EAAD,CACEC,MAAM,mBACNC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAYU,EAAEC,OAAOH,UAExC,cAACF,EAAA,EAAD,CACEC,MAAM,mBACNC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOH,UAExC,cAACI,EAAA,EAAD,CAAQC,QAAS,kBAAMT,GAA6B,SAACU,GAAD,OAAUA,MAA9D,oBAGCX,GACC,qCACE,6BAAKJ,IACL,6BAAKE,WChBAc,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a0ef733.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Button, TextField } from '@material-ui/core';\n\nfunction App(): JSX.Element {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isUsernamePasswordShowing, setIsUsernamePasswordShowing] = useState(\n    false,\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Hey!</h1>\n      <TextField\n        label=\"Spotify Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <TextField\n        label=\"Spotify Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Button onClick={() => setIsUsernamePasswordShowing((old) => !old)}>\n        Submit\n      </Button>\n      {isUsernamePasswordShowing && (\n        <>\n          <h1>{username}</h1>\n          <h1>{password}</h1>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}